version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data:/tmp/db
    networks:
      - app-network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo_express
    restart: always
    depends_on:
      - mongo
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017
    ports:
      - "8081:8081"
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - app-network

  model_worker:
    build:
      context: ./services/data_api/
      dockerfile: Dockerfile
    container_name: model_worker
    environment:
      REDIS_HOST: "redis"
      MONGO_URL: "mongodb://root:example@mongo:27017"
    volumes:
      - ./services/data_api:/app
    command: ["celery", "-A", "model_runner.app", "worker", "--loglevel=info"]
    depends_on:
      - redis
      - data_api
    restart: always
    working_dir: /app
    networks:
      - app-network

  data_api:
    build:
      context: ./services/data_api/
      dockerfile: Dockerfile
    container_name: data_app
    restart: always
    ports:
      - "8002:8002"
    depends_on:
      - redis
      - mongo
    volumes:
      - ./services/data_api:/app
    environment:
      REDIS_HOST: "redis"
      MONGO_URL: "mongodb://root:example@mongo:27017"
    working_dir: /app
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8002", "--reload"]
    networks:
      - app-network

  ui:
    container_name: ui_app
    build: ./services/ui/
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      DATA_API_URL: "http://data_app:8002"
      NEXT_PUBLIC_API_URL: "http://localhost:3000"
    volumes:
      - ./services/ui:/app
      - /app/node_modules
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
