version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data:/tmp/db
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - app-network

  db_api:
    build: ./services/db/
    container_name: db_app
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
    environment:
      MONGO_URL: "mongodb://root:example@mongodb:27017"
    volumes:
      - ./services/db:/app
    working_dir: /app
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    networks:
      - app-network

  # model_api:
  #   build: ./services/model_api/
  #   container_name: model_app
  #   restart: always
  #   ports:
  #     - "8001:8001"
  #   depends_on:
  #     - mongodb
  #   environment:
  #     DB_URL: "http://db_app:8000"
  #     REDIS_HOST: "redis"
  #   volumes:
  #     - ./services/model_api:/app
  #   working_dir: /app
  #   command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8001", "--reload"]
  #   networks:
  #     - app-network

  # model_runner:
  #   build:
  #     context: ./services/model_api/
  #     dockerfile: Dockerfile.worker
  #   container_name: model_runner
  #   environment:
  #     REDIS_HOST: "redis"
  #     DB_URL: "http://db_app:8000"
  #   volumes:
  #     - ./services/model_api:/app
  #   command: ["celery", "-A", "model_runner.app", "worker", "--loglevel=info"]
  #   depends_on:
  #     - redis
  #   restart: always
  #   networks:
  #     - app-network

  data_api:
    build: ./services/data_api/
    container_name: data_app
    restart: always
    ports:
      - "8002:8002"
    depends_on:
      - mongodb
    volumes:
      - ./services/data_api:/app
    working_dir: /app
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8002", "--reload"]
    networks:
      - app-network

  ui:
    build: ./services/ui/
    container_name: ui_app
    restart: always
    ports:
      - "8501:8501"
    environment:
      DB_URL: "http://db_app:8000"
      MODEL_API_URL: "http://model_app:8001"
    depends_on:
      - mongodb
    volumes:
      - ./services/ui:/app
    working_dir: /app
    command: ["streamlit", "run", "main.py", "--server.port", "8501", "--server.runOnSave", "True"]
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
